<h1>宿検索結果</h1>
<p>hostel/search/showからこの画面</p>


  <div class="mx-auto" style="width: 1000px;">
<table>
  <thead>
    <tr>
      <th>宿名</th>
      <br>
      <th>住所</th>
      <br>
      <th>電話番号</th>
      <br>
      <th>国</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  

  <br>

</div>

<% if @hostels.present? %>
<tbody>
  <% @hostels.each do |hostel| %>
    <tr>
      <td><%= link_to hostel.name, hostel_path(hostel.id) %></td>
      <td><%= hostel.address %></td>
      <td><%= hostel.phone_number %></td>
      <td><%= hostel.country %></td>
    </tr>
    <% end %>
<% else %>
  <div>
    <p>一致する宿がありません。条件を変えて検索してみよう！</p>
  </div>
<% end %>
  </tbody>

  </table>

  <h2>gmap</h2>

<%= select_tag "address", options_from_collection_for_select(@hostels,:address, :address), {prompt: "行きたい宿の場所をみる！"}  %>
<input type="button" value="Encode" onclick="codeAddress()">
<div id='map'>
</div>

<script>
/*
mapを関数の外で定義(codeAddressでも使うため)
geocoderを用意
*/

let map
let geocoder

function initMap(){
  // geocoderを初期化
  geocoder = new google.maps.Geocoder()

  map = new google.maps.Map(document.getElementById('map'), {
  center: {lat: -34.397, lng: 150.644},
  zoom: 60
  });
}

function codeAddress(){
  // 入力を取得
  let inputAddressId = document.getElementById('address');
  let inputAddress = inputAddressId.options[inputAddressId.selectedIndex].value;
  console.log(inputAddressId.selectedIndex)
  console.log(inputAddress)

  // geocodingしたあとmapを移動
  geocoder.geocode( { 'address': inputAddress}, function(results, status) {
    if (status == 'OK') {
　　　　　　　　　　　　// map.setCenterで地図が移動
      map.setCenter(results[0].geometry.location);

　　　　　　　　　　　　// google.maps.MarkerでGoogleMap上の指定位置にマーカが立つ
      var marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
      });
    } else {
      alert('Geocode was not successful for the following reason: ' + status);
    }
  });
}

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_API_KEY'] %>&callback=initMap" async defer></script>

  